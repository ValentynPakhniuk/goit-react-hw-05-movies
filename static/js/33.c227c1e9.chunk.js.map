{"version":3,"file":"static/js/33.c227c1e9.chunk.js","mappings":"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","sources":["Fetch.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst API_KEY = 'ff752eca5c4aa6fb3d3aed4452b80b84';\n\nexport async function getTrendingFilms(controller) {\n  const URL = `${BASE_URL}?api_key=${API_KEY}`;\n  const response = await axios.get(URL, { signal: controller.signal });\n  return response.data.results;\n}\n\nexport async function getSearchFilm(search, controller) {\n  const URL = `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  const data = await axios.get(URL, { signal: controller.signal });\n  return data.data.results;\n}\nexport async function getIdFilm(movie_id, controller) {\n  const URL = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n  const data = await axios.get(URL, { signal: controller.signal });\n  return data.data;\n}\n\nexport async function getIdFilmCredits(movie_id, controller) {\n  const URL = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`;\n  const data = await axios.get(URL, { signal: controller.signal });\n  return data.data;\n}\n\nexport async function getIdFilmReviews(movie_id, controller) {\n  const URL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const data = await axios.get(URL, { signal: controller.signal });\n  return data.data;\n}\n","import styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  display: inline-flex;\n  gap: 3px;\n  cursor: pointer;\n  margin-left: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  gap: 10px;\n  list-style-type: none;\n  padding: 0px;\n`;\n\nexport const ContainerFilm = styled.div`\n  display: flex;\n  gap: 15px;\n  padding: 0 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ContainerInform = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px;\n  border-top: 2px solid gray;\n  border-bottom: 2px solid gray;\n  width: 100vw;\n\n  & p {\n    margin: 0;\n  }\n`;\n\nexport const TitleInform = styled.h2`\n  margin: 0px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { getIdFilm } from 'Fetch';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ContainerFilm,\n  ContainerInform,\n  GoBackButton,\n  ListGenres,\n  TitleInform,\n} from './MovieDetails.styled';\nimport { toast } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { CgArrowLeft } from 'react-icons/cg';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieIdFilms, setMovieIdFilms] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMovieDetails() {\n      setIsLoading(true);\n      try {\n        setError(null);\n        const data = await getIdFilm(movieId, controller);\n        if (!data) {\n          setMovieIdFilms(null);\n          return toast.error('Not found');\n        }\n        setMovieIdFilms(data);\n      } catch (error) {\n        if (error.response) {\n          setError(error);\n          toast.error(error.response.data.status_message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieDetails();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <Loader isLoading={isLoading} />\n      <Link to={backLinkLocationRef.current}>\n        <GoBackButton>\n          <CgArrowLeft size=\"16\" />\n          <span>Go back</span>\n        </GoBackButton>\n      </Link>\n      {error && <h2>{error.response.data.status_message}</h2>}\n      {movieIdFilms && (\n        <ContainerFilm>\n          <img\n            src={`https://image.tmdb.org/t/p/original${movieIdFilms.poster_path}`}\n            alt={movieIdFilms.title || movieIdFilms.name}\n            width=\"250\"\n          />\n          <div>\n            <h2>\n              {movieIdFilms.title || movieIdFilms.name} (\n              {new Date(movieIdFilms.release_date).getFullYear()})\n            </h2>\n            <p>Use score: {(movieIdFilms.vote_average * 10).toFixed(0)}%</p>\n            <h3>Overview</h3>\n            <p>{movieIdFilms.overview || <span>No information</span>}</p>\n\n            <h4>Genres</h4>\n            {(\n              <ListGenres>\n                {movieIdFilms.genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ListGenres>\n            ) || <span>No information</span>}\n          </div>\n        </ContainerFilm>\n      )}\n\n      <ContainerInform>\n        <TitleInform>Additional information</TitleInform>\n        <p>\n          <Link to=\"cast\">Cast</Link>\n        </p>\n        <p>\n          <Link to=\"reviews\">Reviews</Link>\n        </p>\n      </ContainerInform>\n      <Suspense fallback={<Loader isLoading />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getTrendingFilms","controller","URL","axios","signal","response","data","results","getSearchFilm","search","getIdFilm","movie_id","getIdFilmCredits","getIdFilmReviews","GoBackButton","styled","ListGenres","ContainerFilm","ContainerInform","TitleInform","movieId","useParams","useState","movieIdFilms","setMovieIdFilms","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","isLoading","setIsLoading","useEffect","AbortController","toast","status_message","getMovieDetails","abort","Loader","to","current","size","src","poster_path","alt","title","name","width","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","map","id","Suspense","fallback"],"sourceRoot":""}